Step#1:Install Helm Chart 
Installing Helm Charts involves deploying pre-configured packages onto Kubernetes clusters.

curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
chmod 700 get_helm.sh
./get_helm.sh
 DESIRED_VERSION=v3.8.2 bash get_helm.sh
 curl -L https://git.io/get_helm.sh | bash -s -- --version v3.8.2

You can verify the helm installation using

helm version

Step#2:Add Helm Stable Charts for Your Local Client
We need to add the Helm Stable Charts for your local client. Execute the below command:

helm repo add stable https://charts.helm.sh/stable

Step#3:Add Prometheus Helm Repository
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

Step#4:Create Prometheus Namespace
kubectl create namespace prometheus
kubectl get ns

Step#5:Install Prometheus using Helm
helm install stable prometheus-community/kube-prometheus-stack -n prometheus

To verify if Prometheus has been successfully installed using Helm on the EC2 instance, you can execute the following command:

kubectl get pods -n prometheus

to check the services file (svc) of the Prometheus

kubectl get svc -n prometheus

Step#5:Expose Prometheus and Grafana to the external world
kubectl edit svc stable-kube-prometheus-sta-prometheus -n prometheus
change it from Cluster IP to LoadBalancer after changing make sure you save the file

kubectl get svc -n prometheus
As evidenced, a load balancer has been provisioned for Prometheus, allowing access via the link provided on port 9090.

Now,letâ€™s change the SVC file of the Grafana and expose it to the outer world

command to edit the SVC file of grafana

kubectl edit svc stable-grafana -n prometheus

kubectl get svc -n prometheus
use the link of the LoadBalancer and access from the Browser

kubectl get secret --namespace prometheus stable-grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo
use the above command to get the password
the user name is admin
